#!/usr/bin/env bash

# @file .common/scripts/log.sh
# @brief Logger that logs pretty console messages
# @description
#   This file contains several functions that log content in different formats. The available
#   log functions include:
#
#   * `error` - Logs an error message
#   * `info` - Logs a regular message
#   * `star` - Logs a message with a star icon at the beginning
#   * `success` - Logs a success message
#   * `warn` - Logs a warning message

set -eo pipefail

if [ "${container:=}" != 'docker' ] && type node &> /dev/null && [ -f './node_modules/signale/package.json' ]; then
  ENHANCED_LOGGING=true
fi

# @description Logs using Node.js
# @example logger info "An informative log"
function logger() {
  node -e 'require(".config/scripts/lib/log.js").'"$1"'('"$2"')' 2> /dev/null
}

# @description Logs an error message
# @example . .config/log error "Something happened!"
function error() {
  if [ "$ENHANCED_LOGGING" ]; then
    logger error "$1"
  else
    echo "ERROR: $1"
  fi
}

# @description Logs an info message
# @example . .config/log info "Here is some information"
function info() {
  if [ "$ENHANCED_LOGGING" ]; then
    logger info "$1"
  else
    echo "INFO: $1"
  fi
}

# @description Logs a message that starts with a star emoji
# @example . .config/log star "Congratulations"
function star() {
  if [ "$ENHANCED_LOGGING" ]; then
    logger star "$1"
  else
    echo "STAR: $1"
  fi
}

# @description Logs a success message
# @example . .config/log success "Yay!"
function success() {
  if [ "$ENHANCED_LOGGING" ]; then
    logger success "$1"
  else
    echo "SUCCESS: $1"
  fi
}

# @description Logs a warning message
# @example . .config/log warn "Just so you know.."
function warn() {
  if [ "$ENHANCED_LOGGING" ]; then
    logger warn "$1"
  else
    echo "WARNING: $1"
  fi
}

"$1" "$2"
