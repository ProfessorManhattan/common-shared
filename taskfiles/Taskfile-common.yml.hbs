---
version: '3'

tasks:
  commit:
    desc: Lint staged files, report spelling errors, and then add commit details
    cmds:
      - npm run lint-staged
      - task: spelling
      - npm run commit -- --no-verify

  markdown-link-check:
    desc: Scan markdown files for broken links
    summary: |
      $ Report any broken links in the files that end with .md

      This task uses the npm package called markdown-link-check to scan all the links
      and then report which ones are broken.
    cmds:
      - npm run misc:markdown-links

  prepare-release:
    desc: Ensure the project has upstream changes, lint, and then update the version
    cmds:
      - task: update
      - task: lint
      - npm run version

  requirements-nodejs:
    cmds:
      - npm install
    sources:
      - .common/files-{{.REPOSITORY_SUBTYPE}}/package.json
    preconditions:
      - sh: "test -f package.json"
        msg: "The package.json file appears to be missing!"

  requirements-python:
    cmds:
      - source ".common/scripts/log.sh"
      - info "Setting up a virtual Python environment"
      - virtualenv venv
      - source venv/bin/activate
      - info "Installing pip requirements"
      - pip3 install requirements.txt
    sources:
      - requirements.txt
    preconditions:
      - sh: "test -f requirements.txt"
        msg: "The requirements.txt file is missing!"

  shell:
    desc: Start a terminal session using Docker with any Linux operating system
    summary: |
      Start a Docker terminal session

      Use Docker to run commands on nearly any operating system. The operating
      systems are all stock distros with systemd added.

      Example usage:
      task shell -- ubuntu-21.04

      Available operating systems:
      archlinux, centos-7, centos-8, debian-9, debian-10, fedora-33, fedora-34,
      ubuntu-18.04, ubuntu-20.04, ubuntu-21.04
    vars:
      WORKDIR:
        sh: basename $PWD
    cmds:
      - docker run --cap-drop=ALL -it -v ${PWD}:/{{WORKDIR}} -w /{{WORKDIR}} --rm megabytelabs/ansible-molecule-{{.CLI_ARGS}}:latest /bin/bash
    preconditions:
      - sh: "type docker &> /dev/null"
        msg: "Docker is not installed! Install it to use this feature."

  spelling:
    desc: Checks for spelling errors in staged files
    vars:
      STAGED_FILES:
        sh: git diff --cached --name-only
    cmds:
      - npx cspell --no-summary --no-progress --show-context --no-must-find-files --config .common/.cspell.json || true
    preconditions:
      - sh: "git diff --cached --name-only"
        msg: "Cannot perform a spell check because there are no staged files"

  start:
    desc: This is an alias for `bash .start.sh` - this is the first command you should run
    cmds:
      - bash .start.sh
    preconditions:
      - sh: "test -f .start.sh"
        msg: "The .start.sh file is missing! It is required to bootstrap the project."

  update:
    desc: Refresh the project with the latest upstream code and ensure blueprint data has propagated
    vars:
      BLUEPRINT_DATA:
        sh: jq '.blueprint' package.json
      COMMON_JSON: ".common/files-$REPOSITORY_SUBTYPE/common.json"
      PKG_DEPS:
        sh: jq '.dependencies' package.json
      PKG_DEV_DEPS:
        sh: jq '.devDependencies' package.json
      PKG_VERSION:
        sh: jq '.version' package.json
    cmds:
      - source "./.common/scripts/log.sh"
      - cp ./.common/.start.sh .start.sh
      - info "Compiling templated files"
      - mkdir .tmp
      - jq --arg a "${BLUEPRINT_DATA}" '. = . * $a' $COMMON_JSON
      - jq --arg a "${BLUEPRINT_DATA}" '.role_variables = $a' __bp.json >__jq.json && mv __jq.json __bp.json
      - jq -s '.[0] * .[1].blueprint' "$COMMON_JSON" "$BLUEPRINT_DATA"
      - |
        FILES=$(find .common/files-$REPOSITORY_SUBTYPE)
        for FILE in "$FILES"; do
          if [ "${FILE##*.}" == 'hbs' ]; then
            hbs --data "$COMMON_JSON" "$FILE" --stdout > "$(dirname $FILE)/${FILE%.*}"
          fi
        done
      - rm -rf .common/files-$REPOSITORY_SUBTYPE/**.hbs
      - rm -rf .common/files-$REPOSITORY_SUBTYPE/**/*.hbs
      - info "Backing u"
      -
